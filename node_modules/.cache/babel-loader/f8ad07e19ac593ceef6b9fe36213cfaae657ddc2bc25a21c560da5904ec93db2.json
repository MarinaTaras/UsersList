{"ast":null,"code":"var _jsxFileName = \"/Users/Marina/Documents/\\u041C\\u0430\\u0440\\u0438\\u043D\\u0430/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441/lab_react/src/components/Table/Table.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './Table.css';\nimport Item from '../Item/Item';\nimport getItems from '../../utils/getItems';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DATE = 'registration_date';\nconst RATING = 'rating';\nfunction Table() {\n  _s();\n  //получаем список пользователей\n  const [items, setItems] = useState([]);\n  const [sortedColumn, setSortedColumn] = useState('');\n\n  // запрос списка\n  useEffect(() => {\n    getItems().then(result => {\n      setItems(result);\n    }).catch(e => console.log(e));\n  }, []);\n  function sortBy(column) {\n    if (sortedColumn === column) {\n      setItems([...items].reverse());\n      return;\n    }\n    switch (column) {\n      case DATE:\n        setItems([...items].sort((a, b) => {\n          return new Date(a[DATE]) - new Date(b[DATE]);\n        }));\n        break;\n      case RATING:\n        setItems([...items].sort((a, b) => a[RATING] - b[RATING]));\n        break;\n      default:\n        setItems([...items].sort((a, b) => a - b));\n    }\n    setSortedColumn(column);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"table__sort\",\n        children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'table__reg' + (sortedColumn === DATE ? ' active' : ''),\n        onClick: () => sortBy(DATE),\n        children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: 'table__rate' + (sortedColumn === RATING ? ' active' : ''),\n        onClick: () => sortBy(RATING),\n        children: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table__unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__th\",\n              children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__th\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__th\",\n              children: \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__th\",\n              children: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"table__th\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: items.map(item => Item({\n            item\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Table, \"bGmC7AO7QgAWrcUPjmMmML/aqZo=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useEffect","useState","Item","getItems","jsxDEV","_jsxDEV","Fragment","_Fragment","DATE","RATING","Table","_s","items","setItems","sortedColumn","setSortedColumn","then","result","catch","e","console","log","sortBy","column","reverse","sort","a","b","Date","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","_c","$RefreshReg$"],"sources":["/Users/Marina/Documents/Марина/Яндекс/lab_react/src/components/Table/Table.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './Table.css';\nimport Item from '../Item/Item'\nimport getItems from '../../utils/getItems';\n\n\nconst DATE = 'registration_date'\nconst RATING = 'rating'\n\nfunction Table() {\n  //получаем список пользователей\n  const [items, setItems] = useState([])\n  const [sortedColumn, setSortedColumn] = useState('')\n\n  // запрос списка\n  useEffect(() => {\n    getItems()\n      .then((result) => {\n        setItems(result)\n      })\n      .catch(e => console.log(e))\n  }, [])\n\n  function sortBy(column) {\n\n    if (sortedColumn === column) {\n          setItems([...items].reverse())\n          return\n        }\n\n    switch (column) {\n      case DATE: \n          setItems([...items].sort((a, b) => {\n          return (new Date(a[DATE]) - new Date(b[DATE]))\n        }))\n        break\n      case RATING: \n        setItems([...items].sort((a, b) => a[RATING] - b[RATING]))\n        break\n      default: \n      setItems([...items].sort((a, b) => a - b))\n    }\n\n    setSortedColumn(column)\n  }\n\n  return (\n    <>\n      <div>\n        <span className=\"table__sort\">Сортировка:</span>\n        <span className={'table__reg' + (sortedColumn === DATE ? ' active' : '')} onClick={() => sortBy(DATE)}>Дата регистрации</span>\n        <span className={'table__rate' + (sortedColumn === RATING ? ' active' : '')}  onClick={() => sortBy(RATING)}>Рейтинг</span>\n      </div>\n\n      <div className=\"table\">\n        <table className=\"table__unit\">\n          <thead>\n            <tr>\n              <th className=\"table__th\">Имя пользователя</th>\n              <th className=\"table__th\">E-mail</th>\n              <th className=\"table__th\">Дата регистрации</th>\n              <th className=\"table__th\">Рейтинг</th>\n              <th className=\"table__th\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {items.map(item => Item({ item }))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}